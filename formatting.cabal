cabal-version:       2.4
name:                formatting
version:             7.1.3
synopsis:            Combinator-based type-safe formatting (like printf() or FORMAT)
description:         Combinator-based type-safe formatting (like printf() or FORMAT), modelled from the HoleyMonoids package.
                     .
                     See the README at <https://github.com/AJChapman/formatting#readme> for more info.
homepage:            https://github.com/AJChapman/formatting#readme
bug-reports:         https://github.com/AJChapman/formatting/issues
license:             BSD-3-Clause
license-file:        LICENSE
author:              Chris Done, Shachaf Ben-Kiki, Martijn van Steenbergen, Mike Meyer, Bryan O'Sullivan, Alex Chapman
maintainer:          alex@farfromthere.net
copyright:           2020 Alex Chapman, 2013 Chris Done, Shachaf Ben-Kiki, Martijn van Steenbergen, Mike Meyer, 2011 MailRank, Inc.
category:            Text
build-type:          Simple
extra-source-files:  CHANGELOG.md
                     README.md
tested-with:           GHC == 8.4.4
                     , GHC == 8.6.5
                     , GHC == 8.8.3
                     , GHC == 8.10.1
                     , GHC == 9.0.1

common deps
  build-depends:
    base >= 4.11 && < 5,
    text >= 0.11.0.8,
    ghc-prim,

-- Warnings list list taken from
-- https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3
-- Enable all warnings with -Weverything, then disable the ones we
-- donâ€™t care about
  default-language:    Haskell2010
  ghc-options:         -Weverything
                       -Wno-all-missed-specialisations
                       -Wno-implicit-prelude
                       -Wno-missed-specialisations
                       -Wno-missing-exported-signatures
                       -Wno-missing-import-lists
                       -Wno-missing-local-signatures
                       -Wno-monomorphism-restriction
                       -Wno-missing-deriving-strategies
                       -Wno-safe
                       -Wno-unsafe
                       -fprint-potential-instances
  if impl(ghc >= 8.10)
    ghc-options:       -Wno-prepositive-qualified-module
                       -Wno-missing-safe-haskell-mode

library
  import: deps
  hs-source-dirs:    src
  build-depends:
    clock >= 0.4,
    old-locale,
    scientific >= 0.3.0.0,
    time >= 1.5,
    transformers,
  if !impl(ghcjs)
    build-depends:
      double-conversion ^>= 2.0.2.0,
  exposed-modules:
    Formatting
    Formatting.Formatters
    Formatting.ShortFormatters
    Formatting.Combinators
    Formatting.Examples
    Formatting.Time
    Formatting.Clock
    Formatting.Internal
    Formatting.Internal.Raw
    Formatting.Buildable
    Formatting.FromBuilder
  other-modules:
    Data.Text.Format.Functions
    Data.Text.Format.Types
    Data.Text.Format

test-suite formatting-test
  import:              deps
  build-depends:       formatting, hspec, scientific
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N

benchmark bench
  import:              deps
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             bench.hs
  build-depends:       formatting, criterion, QuickCheck
  ghc-options:         -O2

source-repository head
  type:     git
  location: http://github.com/AJChapman/formatting
